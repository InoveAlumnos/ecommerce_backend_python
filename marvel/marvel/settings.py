"""
Django settings for marvel project.

Generated by 'django-admin startproject' using Django 3.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
# NOTE: Importamos os para indicar el directorio de templates y otras utilidades:
import os
# Importamos Celery para el manejo de tareas asincrónicas:

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

def get_env(var):
    '''
    Funcion para traer las variables de entorno.
    '''
    try:
        environment = os.getenv(var)
        return environment
    except:
        return ''

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-$dpguq$#6!6dw($(qd6))7qcw%%#a=sc!-!7t!_av9%5*(q=uf'
SECRET_KEY = get_env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True if get_env('DEBUG') == 'True' else False

ALLOWED_HOSTS = ['0.0.0.0', '127.0.0.1', 'localhost', 'inove-marvel.herokuapp.com']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Local apps: Acá ponemos el nombre de las carpetas de nuestras aplicaciones
    'e_commerce',
    # Third party apps: acá vamos agregando las aplicaciones de terceros, extensiones de Django.
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'whitenoise.runserver_nostatic',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',

    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    # Corsheaders added:
    'corsheaders.middleware.CorsMiddleware',
]
CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = 'marvel.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # NOTE: Agregamos el directorio para los templates, necesario para Swagger
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'marvel.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# PRODUCTION_DB = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'dc2fmok5lb9368',           # POSTGRES_DB
#         'USER': 'epqdasaigmomct',           # POSTGRES_USER
#         'PASSWORD': '9fae66f3e7b9daad5dd4e3c4733bf8c94b1a20ba0ad002286f08b3b04a62ffba', # POSTGRES_PASSWORD
#         'HOST': 'ec2-52-3-130-181.compute-1.amazonaws.com',                           # Nombre del servicio
#         'PORT': '5432'                      # Número del puerto
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': get_env('POSTGRES_DB'),             # POSTGRES_DB
        'USER': get_env('POSTGRES_USER'),           # POSTGRES_USER
        'PASSWORD': get_env('POSTGRES_PASSWORD'),   # POSTGRES_PASSWORD
        'HOST': get_env('POSTGRES_HOST'),           # Nombre del servicio
        'PORT': '5432'                              # Número del puerto
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# NOTE: STATIC_ROOT y STATICFILES_DIRS No pueden contener el mismo directorio entre sus variables.
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (str(BASE_DIR.joinpath('staticfiles')),)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# NOTE: Para debug
# Color en los prints:
# Modo de uso: print(VERDE+"mi texto")

AMARILLO = "\033[;33m"
CIAN = "\033[;36m"
VERDE = "\033[;32m"

# NOTE: Para manejo de sesión.
LOGIN_REDIRECT_URL = '/e-commerce/index'
LOGIN_URL = '/e-commerce/'

# NOTE: Logging settings

LOGGING_DIR = f'{BASE_DIR}/marvel/logs/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'generic': {
            'format': '[%(asctime)s] |%(levelname)s| %(message)s',
            'datefmt': "%d/%b/%Y %H:%M:%S",
            'style': '%'
        }
    },
    'handlers': {
        'general': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOGGING_DIR, 'general-batch.log'),
            'maxBytes': 1024*1024*15,  # 15MB
            'backupCount': 10,
            'formatter': 'generic',        },
    },
    'loggers': {
        'django': {
            'handlers': ['general'],
            'propagate': True,
            'level': 'DEBUG',
        }
    }
}